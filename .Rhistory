myDataCleanNumericN <- myDataCleanNumeric[subset(rownames(myDataCleanNumeric), rownames(myDataCleanNumeric)[1] != NaN)]
myDataCleanNumericN <- myDataCleanNumeric[subset(rownames(myDataCleanNumeric), !is.nan(rownames(myDataCleanNumeric)[1]))]
subset(rownames(myDataCleanNumeric), !is.nan(rownames(myDataCleanNumeric)[1]))
myDataCleanNumericN <- myDataCleanNumeric[,subset(rownames(myDataCleanNumeric), !is.nan(rownames(myDataCleanNumeric)[1]))]
myDataCleanNumeric %>% filter(is.nan(Name))
rownames(myDataCleanNumeric) <- myDataClean$original_title
myDataCleanNumeric %>% filter(is.nan(Name))
myDataCleanNumeric %>% filter(Name %in% c(NaN))
myDataCleanNumeric %>% filter(row.names(myDataCleanNumeric) %in% c(NaN))
dim(myDataCleanNumeric)
dim(na.omit(myDataCleanNumeric))
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(head(myDataCleanNumeric))) #Genera el clustering jerárquico de los datos
sample(myDataCleanNumeric, 20)
sample(nrow(myDataCleanNumeric), 20)
sample = sample(nrow(myDataCleanNumeric), 200)
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#datos$gruposHC<-groups
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
library(readr)
#library(fpc) #para hacer el plotcluster
library(fastcluster)
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(dplyr)
Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
library(readr)
#library(fpc) #para hacer el plotcluster
library(fastcluster)
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(dplyr)
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
library(fpc) #para hacer el plotcluster
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
library(readr)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(fastcluster)
library(dplyr)
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
names <- filter(mydata, id %in% sample$id)
mydata[mydata$id %in% sample$id,]
sample
myDataCleanNumeric[,sample]
myDataCleanNumeric[sample]
myDataCleanNumeric[sample, ]
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
#Clustering jerárquico
hc<-hclust(dist(myDataCleanNumeric)) #Genera el clustering jerárquico de los datos
myDataClean = distinct(na.omit(mydata), original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
v
movies = read.csv("./tmdb-movies.csv")
# View(movies)
mydata = as.data.frame(unclass(movies))
summary(mydata)
dim(mydata)
myDataClean = distinct(na.omit(mydata), original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
#Clustering jerárquico
hc<-hclust(dist(myDataCleanNumeric)) #Genera el clustering jerárquico de los datos
library(readr)
#library(fpc) #para hacer el plotcluster
library(fastcluster)
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(dplyr)
movies = read.csv("./tmdb-movies.csv")
# View(movies)
mydata = as.data.frame(unclass(movies))
summary(mydata)
dim(mydata)
myDataClean = distinct(na.omit(mydata), original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(head(myDataCleanNumeric))) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#datos$gruposHC<-groups
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(head(myDataCleanNumeric)))
mean(silch[,3])
library(readr)
#library(fpc) #para hacer el plotcluster
library(fastcluster)
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(dplyr)
movies = read.csv("./tmdb-movies.csv")
# View(movies)
mydata = as.data.frame(unclass(movies))
summary(mydata)
dim(mydata)
myDataClean = distinct(na.omit(mydata), original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(head(myDataCleanNumeric))) #Genera el clustering jerárquico de los datos
library(readr)
#library(fpc) #para hacer el plotcluster
library(fastcluster)
library(NbClust) #Para determinar el n?mero de clusters ?ptimo
library(factoextra) #Para hacer gr?ficos bonitos de clustering
library(dplyr)
movies = read.csv("./tmdb-movies.csv")
# View(movies)
mydata = as.data.frame(unclass(movies))
summary(mydata)
dim(mydata)
myDataClean = na.omit(mydata)
distinct(myDataClean, original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
rownames(myDataCleanNumeric) <- myDataClean$original_title
rownames(myDataCleanNumeric)
myDataCleanNumeric <- cbind(Row.Names = myDataClean$original_title, myDataCleanNumeric)
library(fpc) #para hacer el plotcluster
dim(mydata)
myDataClean = na.omit(mydata)
distinct(myDataClean, original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
rownames(myDataCleanNumeric) <- myDataClean$original_title
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
myDataCleanNumeric <- cbind(Row.Names = myDataClean$original_title, myDataCleanNumeric)
myDataClean
d1 <- dist(scale(myDataClean, center = T, scale = T))
myDataCleanNumeric <- cbind(Row.Names = myDataClean$original_title, myDataCleanNumeric)
myDataClean
d1 <- dist(scale(myDataCleanNumeric, center = T, scale = T))
d1 <- dist(scale(myDataCleanNumeric, center = T, scale = T))
myDataCleanNumeric
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
myDataClean$id = NULL
myDataClean$budget_adj = NULL
myDataClean$revenue_adj = NULL
#Clustering jerárquico
hc<-hclust(dist(head(myDataCleanNumeric))) #Genera el clustering jerárquico de los datos
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
rownames(sample)<-names
dim(names)
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- filter(mydata, id %in% sample$id)
dim(names)
dim(sample)
names <- mydata[mydata$id %in% sample$id,]
dim(sample)
dim(names)
names
names <- myDataClean[myDataClean$id %in% sample$id,]
names
names <- myDataClean[myDataClean$id %in% sample$id,]$original_title
names
dim(names)
movies = read.csv("./tmdb-movies.csv")
# View(movies)
mydata = as.data.frame(unclass(movies))
summary(mydata)
dim(mydata)
myDataClean = na.omit(mydata)
distinct(myDataClean, original_title)
dim(myDataClean)
summary(myDataClean)
myDataCleanNumeric =myDataClean[, !sapply(myDataClean, is.character)]
scaled_data = as.matrix(scale(myDataCleanNumeric))
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 200), ]
names <- myDataClean[myDataClean$id %in% sample$id,]$original_title
names
dim(names)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
rownames(sample)<-names
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(head(myDataCleanNumeric)))
mean(silch[,3])
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 100), ]
names <- myDataClean[myDataClean$id %in% sample$id,]$original_title
names
dim(names)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
rownames(sample)<-names
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 50), ]
names <- myDataClean[myDataClean$id %in% sample$id,]$original_title
names
dim(names)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
rownames(sample)<-names
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 20), ]
names <- myDataClean[myDataClean$id %in% sample$id,]$original_title
names
dim(names)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
rownames(sample)<-names
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 20), ]
names <- myDataClean[myDataClean$id %in% sample$id,]$popularity
names
dim(names)
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
rownames(sample)<-names
#Clustering jerárquico
#Clustering jerárquico
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
e
filtered <-myDataClean[myDataClean$id %in% sample$id,]
filtered <-myDataClean[myDataClean$id %in% sample$id,]
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico pop
names <- filtered$popularity
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Clustering jerárquico nombres
names <- filtered$original_title
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
#Clustering jerárquico nombres
names <- filtered$original_title
rownames(sample)<-names
#Clustering jerárquico pop
names <- filtered$popularity
rownames(sample)<-names
filtered <-myDataClean[myDataClean$id %in% sample$id,]
#Clustering jerárquico pop
names <- filtered$popularity
rownames(sample)<-names
sample = myDataCleanNumeric[sample(nrow(myDataCleanNumeric), 20), ]
filtered <-myDataClean[myDataClean$id %in% sample$id,]
sample$id = NULL
sample$budget_adj = NULL
sample$revenue_adj = NULL
#Clustering jerárquico pop
names <- filtered$popularity
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Clustering jerárquico nombres
names <- filtered$original_title
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#datos$gruposHC<-groups
#Clustering jerárquico revenue
names <- filtered$revenue
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
#datos$gruposHC<-groups
#Clustering jerárquico revenue
names <- filtered$revenue
rownames(sample)<-names
#datos$gruposHC<-groups
#Clustering jerárquico revenue
names <- filtered$director
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#datos$gruposHC<-groups
#Clustering jerárquico genres
names <- filtered$genres
rownames(sample)<-names
#datos$gruposHC<-groups
#Clustering jerárquico genres
names <- filtered$release_year
rownames(sample)<-names
#datos$gruposHC<-groups
#Clustering jerárquico genres
names <- filtered$cast
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
#datos$gruposHC<-groups
#Clustering jerárquico genres
names <- filtered$production_companies
rownames(sample)<-names
#datos$gruposHC<-groups
#Clustering jerárquico genres
names <- filtered$runtime
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
mean(silch[,3])
myDataClean[myDataClean$original_title == "Mistress America",]
myDataClean[myDataClean$original_title == "Fifty Shades of Grey",]
groups
names <- filtered$id
rownames(sample)<-names
hc<-hclust(dist(sample)) #Genera el clustering jerárquico de los datos
plot(hc) #Genera el dendograma
rect.hclust(hc,k=4) #Dibuja el corte de los grupos en el gráfico
groups<-cutree(hc,k=4) #corta el dendograma, determinando el grupo de cada fila
groups[0]
groups[0][0]
groups[0][0][0]
groups
filtered$gruposHC<-groups
g1HC<-datos[datos$gruposHC==1,]
g2HC<-datos[datos$gruposHC==2,]
g3HC<-datos[datos$gruposHC==3,]
g4HC<-datos[datos$gruposHC==4,]
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC,]
g1HC<-filtered[filtered$gruposHC==1,]
g2HC<-filtered[filtered$gruposHC==2,]
g3HC<-filtered[filtered$gruposHC==3,]
g4HC<-filtered[filtered$gruposHC==4,]
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC,]
filteredGroup1
filteredGroup1 <-myDataClean[myDataClean$id %in% g2HC,]
filteredGroup1
filteredGroup2$genres
filteredGroup2 <-myDataClean[myDataClean$id %in% g2HC,]
filteredGroup2$genres
filteredGroup4 <-myDataClean[myDataClean$id %in% g4HC,]
filteredGroup3 <-myDataClean[myDataClean$id %in% g3HC,]
filteredGroup1$genres
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC,]
filteredGroup2 <-myDataClean[myDataClean$id %in% g2HC,]
filteredGroup3 <-myDataClean[myDataClean$id %in% g3HC,]
filteredGroup4 <-myDataClean[myDataClean$id %in% g4HC,]
filteredGroup1$genres
filteredGroup2$genres
filteredGroup3$genres
filteredGroup4$genres
groups
g1HC<-filtered[filtered$gruposHC == 1,]
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC,]
filteredGroup1$genres
filteredGroup3
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC$id,]
filteredGroup1 <-myDataClean[myDataClean$id %in% g1HC$id,]
filteredGroup2 <-myDataClean[myDataClean$id %in% g2HC$id,]
filteredGroup3 <-myDataClean[myDataClean$id %in% g3HC$id,]
filteredGroup4 <-myDataClean[myDataClean$id %in% g4HC$id,]
filteredGroup1$genres
filteredGroup2$genres
filteredGroup3$genres
filteredGroup4$genres
filteredGroup1
filteredGroup1$genres
filteredGroup2$genres
filteredGroup3$genres
filteredGroup4$genres
filteredGroup1$budget
filteredGroup2$budget
filteredGroup3$budget
filteredGroup4$budget
filteredGroup1$revenue
filteredGroup2$revenue
filteredGroup3$revenue
filteredGroup4$revenue
filteredGroup1$release_year
filteredGroup2$release_year
filteredGroup3$release_year
filteredGroup4$release_year
#Método de la silueta para clustering jerárquico
silch<-silhouette(groups,dist(sample))
